<div>
  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/package.json</parameter>
    <parameter name="instructions">I will add @babel/plugin-proposal-private-property-in-object to devDependencies.</parameter>
    <parameter name="code_edit">
    {
      "name": "creditfi-frontend",
      "version": "1.0.0",
      "private": true,
      "homepage": "/",
      "dependencies": {
        "@emotion/react": "^11.11.3",
        "@emotion/styled": "^11.11.0",
        "@mui/icons-material": "^5.15.6",
        "@mui/material": "^5.15.6",
        "@testing-library/jest-dom": "^5.17.0",
        "@testing-library/react": "^13.4.0",
        "@testing-library/user-event": "^13.5.0",
        "@web3-react/core": "^8.2.3",
        "@web3-react/injected-connector": "^6.0.7",
        "chart.js": "^4.4.1",
        "ethers": "^6.10.0",
        "framer-motion": "^11.0.3",
        "react": "^18.2.0",
        "react-chartjs-2": "^5.2.0",
        "react-countup": "^6.5.0",
        "react-dom": "^18.2.0",
        "react-router-dom": "^6.21.3",
        "react-scripts": "5.0.1",
        "web-vitals": "^2.1.4"
      },
      "scripts": {
        "start": "react-scripts start",
        "build": "GENERATE_SOURCEMAP=false react-scripts build",
        "test": "react-scripts test",
        "eject": "react-scripts eject",
        "lint": "eslint src/**/*.{js,jsx}",
        "lint:fix": "eslint src/**/*.{js,jsx} --fix",
        "format": "prettier --write 'src/**/*.{js,jsx,css,scss}'"
      },
      "eslintConfig": {
        "extends": [
          "react-app",
          "react-app/jest"
        ]
      },
      "browserslist": {
        "production": [
          ">0.2%",
          "not dead",
          "not op_mini all"
        ],
        "development": [
          "last 1 chrome version",
          "last 1 firefox version",
          "last 1 safari version"
        ]
      },
      "devDependencies": {
        "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
        "eslint": "^8.56.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-prettier": "^5.1.3",
        "eslint-plugin-react": "^7.33.2",
        "prettier": "^3.2.4"
      }
    }
    </parameter>
  </invoke>

  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/src/components/Layout/Navbar.js</parameter>
    <parameter name="instructions">I will remove the unused Typography import.</parameter>
    <parameter name="code_edit">
    import React, { useEffect, useState } from 'react';
    import { AppBar, Toolbar, Button, Box, useTheme, Snackbar, Alert } from '@mui/material';
    import { Link } from 'react-router-dom';
    import AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';
    import CreditGauge from '../Icons/CreditGauge';
    import { useWeb3React } from '@web3-react/core';
    import { injected, getErrorMessage } from '../../utils/web3';
    import Logo from '../Logo/Logo';
    // ... rest of the file remains unchanged ...
    </parameter>
  </invoke>

  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/src/pages/Borrow.js</parameter>
    <parameter name="instructions">I will remove the unused theme variable.</parameter>
    <parameter name="code_edit">
    import React, { useState } from 'react';
    import {
      Container,
      Grid,
      Card,
      CardContent,
      Typography,
      TextField,
      Button,
      Slider,
      Box,
      Alert,
      Divider
    } from '@mui/material';
    import InfoIcon from '@mui/icons-material/Info';

    const Borrow = () => {
      const [loanAmount, setLoanAmount] = useState('');
      const [collateralAmount, setCollateralAmount] = useState('');
      const [duration, setDuration] = useState(30);
    // ... rest of the file remains unchanged ...
    }
    </parameter>
  </invoke>

  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/src/pages/CreditScore.js</parameter>
    <parameter name="instructions">I will remove the unused ethers import.</parameter>
    <parameter name="code_edit">
    import React, { useState, useEffect } from 'react';
    import {
      Container,
      Grid,
      Card,
      CardContent,
      Typography,
      Box,
      CircularProgress,
      List,
      ListItem,
      ListItemText,
      Divider,
      Alert,
      Button,
    } from '@mui/material';
    import { Line } from 'react-chartjs-2';
    // ... rest of the file remains unchanged ...
    </parameter>
  </invoke>

  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/src/pages/Dashboard.js</parameter>
    <parameter name="instructions">I will remove the unused Box import.</parameter>
    <parameter name="code_edit">
    import React from 'react';
    import { 
      Container, 
      Grid, 
      Card, 
      CardContent, 
      Typography, 
      LinearProgress,
      Table,
      TableBody,
      TableCell,
      TableContainer,
      TableHead,
      TableRow,
      Paper
    } from '@mui/material';
    // ... rest of the file remains unchanged ...
    </parameter>
  </invoke>

  <invoke name="edit_file">
    <parameter name="target_file">creditfi-frontend/src/pages/Home.js</parameter>
    <parameter name="instructions">I will remove the unused Slide import.</parameter>
    <parameter name="code_edit">
    import React from 'react';
    import { Container, Typography, Box, Grid, Button, Paper, useTheme, Fade } from '@mui/material';
    // ... rest of the file remains unchanged ...
    </parameter>
  </invoke>

  <invoke name="run_terminal_cmd">
    <parameter name="command">git add .</parameter>
    <parameter name="explanation">Adding all changed files to git staging area.</parameter>
    <parameter name="is_background">false</parameter>
    <parameter name="require_user_approval">true</parameter>
  </invoke>

  <invoke name="run_terminal_cmd">
    <parameter name="command">git commit -m "Fix: Remove unused imports and add missing babel plugin"</parameter>
    <parameter name="explanation">Committing the changes with a descriptive message.</parameter>
    <parameter name="is_background">false</parameter>
    <parameter name="require_user_approval">true</parameter>
  </invoke>

  <invoke name="run_terminal_cmd">
    <parameter name="command">git push origin main</parameter>
    <parameter name="explanation">Pushing the changes to the main branch to trigger a new deployment.</parameter>
    <parameter name="is_background">false</parameter>
    <parameter name="require_user_approval">true</parameter>
  </invoke>
</div> 